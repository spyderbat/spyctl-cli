{"event_redflag": {"title": "Redflag", "version": "1.1.11", "projection": {"ancestors": "string_array", "args": "string_array", "auser": "string", "cluster_name": "string", "cluster_uid": "string", "custom_flag_name": "string", "custom_flag_uid": "string", "cves": "string_array", "description": "string", "euser": "string", "false_positive": "bool", "flag_class": "string", "id": "string", "impact": "string", "local_ip": "ip", "local_port": "integer", "mitre_code": "string_array", "muid": "string", "name": "string", "original_schema": "string", "pod_namespace": "string", "policy_name": "string", "policy_uid": "string", "ref": "string", "remote_ip": "ip", "remote_port": "integer", "schema": "string", "severity": "string", "short_name": "string", "time": "double", "traces": "string_array", "uptime": "double"}, "descriptions": {"args": {"title": "Arguments", "desc": "If referencing a process, the arguments of the process that generated the red flag"}, "auser": {"title": "Authenticated User Name", "desc": "If referencing a process, the authenticated user name of the process that generated the red flag"}, "euser": {"title": "Effective User Name", "desc": "If referencing a process, the effective user name of the process that generated the red flag"}, "description": {"title": "Description", "desc": "The reason the red flag was generated"}, "id": {"title": "UID", "desc": "The unique Spyderbat ID of the red flag"}, "local_ip": {"title": "Local IP", "desc": "The local IP address, or originating address of the connection that generated the red flag (if applicable)"}, "local_port": {"title": "Local port", "desc": "The local port of the connection that generated the red flag (if applicable)"}, "muid": {"title": "Machine UIDs", "desc": "The Spyderbat ID of the machine associated with the red flag"}, "name": {"title": "Process Name", "desc": "The name of the process that generated the red flag (if applicable)"}, "ref": {"title": "Reference Object UIDs", "desc": "The Spyderbat ID of the object that the red flag is associated with"}, "pod_namespace": {"title": "Pod Namespace", "desc": "The namespace of the pod associated with the red flag"}, "schema": {"title": "Schema", "desc": "The full schema string of the red flag"}, "severity": {"title": "Severity", "desc": "The security level of the red flag; one of info, low, medium, high, or critical"}, "uptime": {"title": "Uptime", "desc": "The uptime of the object referenced by the redflag"}, "time": {"title": "Time", "desc": "The time the red flag was generated"}, "traces": {"title": "Spydertrace UIDs", "desc": "The Spyderbat IDs of the spydertraces that this red flag is a part of"}, "false_positive": {"title": "Is Exception", "desc": "True if the red flag was generated by expected activity"}, "ancestors": {"title": "Ancestors", "desc": "If the reference object has ancestor processes, this is a list of their names"}, "policy_uid": {"title": "Policy UID", "desc": "If the red flag is associated with a Guardian policy, this is the Spyderbat ID of the policy"}, "policy_name": {"title": "Policy Name", "desc": "If the red flag is associated with a Guardian policy, this is the name of the policy"}, "cluster_name": {"title": "Cluster Name", "desc": "If red flag is associated with a cluster, or a node of a cluster, this is the name of the cluster"}, "impact": {"title": "Impact", "desc": "The potential impact of the red flag to the environment."}, "flag_class": {"title": "Class", "desc": "The class of the red flag indicating the flag's type"}, "remote_ip": {"title": "Remote IP", "desc": "The IP address on the remote side of the connection that generated the red flag (if applicable)"}, "remote_port": {"title": "Remote Port", "desc": "The port number on the remote side of the connection that generated the red flag (if applicable)"}, "short_name": {"title": "Short Name", "desc": "The short name describing the red flag"}, "custom_flag_uid": {"title": "Custom Flag UID", "desc": "If the red flag is associated with a custom flag, this is the Spyderbat ID of the custom flag"}, "custom_flag_name": {"title": "Custom Flag Name", "desc": "If the red flag is associated with a custom flag, this is the name of the custom flag"}, "cves": {"title": "CVE", "desc": "The CVEs (Common Vulnerabilities and Exposures) associated with the red flag"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat UID of the cluster associated with the red flag"}, "mitre_code": {"title": "MITRE Code", "desc": "The MITRE ATT&CK tactic/(sub)technique associated with the red flag, encoded as mitre code strings"}}}, "event_deviation": {"title": "Deviation", "version": "1.0.2", "omit_from_console": true, "projection": {"checksum": "string", "description": "string", "original_schema": "string", "id": "string", "policy_mode": "string", "policy_name": "string", "policy_type": "string", "policy_uid": "string", "ref": "string", "schema": "string", "time": "double", "container_uid": "string", "hostname": "string", "cluster_uid": "string", "cluster_name": "string", "namespace": "string", "pod_kuid": "string"}, "descriptions": {"checksum": {"title": "Checksum", "desc": "A checksum of the deviation event, used for detecting duplicate deviations"}, "description": {"title": "Description", "desc": "The description of the deviation event"}, "id": {"title": "UID", "desc": "The unique Spyderbat ID of the the deviation event"}, "policy_mode": {"title": "Policy Mode", "desc": "The mode of the policy that generated the deviation event"}, "policy_name": {"title": "Policy Name", "desc": "The name of the policy that generated the deviation event"}, "policy_type": {"title": "Policy Type", "desc": "The type of the policy that generated the deviation event"}, "policy_uid": {"title": "Policy UID", "desc": "The Spyderbat ID of the policy that generated the deviation event"}, "ref": {"title": "Reference UID", "desc": "The Spyderbat ID of the object that this deviation event is associated with"}, "schema": {"title": "Schema", "desc": "The full schema of the deviation event"}, "time": {"title": "Time", "desc": "The time that the deviation event was generated"}, "container_uid": {"title": "Container UID", "desc": "The kubernetes ID of the container related to the deviation event"}, "hostname": {"title": "Hostname", "desc": "The hostname of the machine related to the deviation event"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat UID of the cluster related to the deviation event"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the cluster related to the deviation event"}, "namespace": {"title": "Namespace", "desc": "The namespace of the pod related to the deviation event"}, "pod_kuid": {"title": "Pod UID", "desc": "The kubernetes ID of the pod related to the deviation event"}}}, "event_metric": {"title": "Metric Agent", "version": "2.0.5", "omit_from_console": true, "projection": {"original_schema": "string", "cpu_cores": "integer", "total_mem_B": "integer", "bandwidth_1min_Bps": "integer", "cpu_1min_P.agent": "double", "mem_1min_P.agent": "double", "mem_1min_B.agent": "integer", "id": "string", "muid": "string", "ref": "string", "schema": "string", "time": "double", "hostname": "string", "cluster_name": "string"}, "descriptions": {"cpu_cores": {"title": "CPU Cores", "desc": "The number of CPU cores on the machine"}, "total_mem_B": {"title": "Total Memory", "desc": "The total memory on the machine in bytes"}, "bandwidth_1min_Bps": {"title": "Bandwidth", "desc": "The bandwidth usage of the agent in bytes per second. Only applicable to agent metrics"}, "cpu_1min_P.agent": {"title": "CPU Usage", "desc": "The CPU usage of the agent as a percentage. Only applicable to agent metrics"}, "mem_1min_P.agent": {"title": "Memory Usage", "desc": "The memory usage of the agent as a percentage. Only applicable to agent metrics"}, "mem_1min_B.agent": {"title": "Memory Usage", "desc": "The memory usage of the agent in bytes. Only applicable to agent metrics"}, "schema": {"title": "Schema", "desc": "The full schema string of the metric"}, "id": {"title": "UID", "desc": "The unique Spyderbat ID of the metric"}, "muid": {"title": "Machine ID", "desc": "The unique machine ID associated with this model or event"}, "time": {"title": "Time", "desc": "The time that the event was generated"}, "ref": {"title": "Reference ID", "desc": "The object that this metric is associated with"}, "hostname": {"title": "Hostname", "desc": "The hostname of the machine related to this metric"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the cluster related to this metric"}}}, "event_metric_machine": {"title": "Metric Machine", "version": "1.0.2", "omit_from_console": true, "projection": {"original_schema": "string", "id": "string", "muid": "string", "schema": "string", "time": "double", "duration": "integer", "start.procs": "integer", "start.inbound": "integer", "start.outbound": "integer", "created.procs": "integer", "created.inbound": "integer", "created.outbound": "integer", "load_avg_1m": "double", "load_avg_5m": "double", "load_avg_15m": "double", "memory.total": "double", "memory.free": "double", "bats.running": "string_array", "bats.stopped": "string_array", "network.bytes_in": "double", "network.bytes_out": "double"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID of the metric"}, "muid": {"title": "Machine ID", "desc": "The unique machine ID associated with this model or event"}, "schema": {"title": "Schema", "desc": "The full schema string of the metric"}, "time": {"title": "Time", "desc": "The time that the event was generated"}, "duration": {"title": "Duration", "desc": "Time interval duration during which the metrics were measured"}, "start.procs": {"title": "Start Procs", "desc": "Number of processes running at the start of the interval"}, "start.inbound": {"title": "Start Inbound", "desc": "Number of inbound network connections at the start of the interval"}, "start.outbound": {"title": "Start Outbound", "desc": "Number of outbound network connections at the start of the interval"}, "created.procs": {"title": "Created Procs", "desc": "Number of processes created during the interval"}, "created.inbound": {"title": "Created Inbound", "desc": "Number of inbound network connections created during the interval"}, "created.outbound": {"title": "Created Outbound", "desc": "Number of outbound network connections created during the interval"}, "load_avg_1m": {"title": "Load Average 1 Minute", "desc": "The 1 minute load average of the machine during the interval"}, "load_avg_5m": {"title": "Load Average 5 Minutes", "desc": "The 5 minute load average of the machine during the interval"}, "load_avg_15m": {"title": "Load Average 15 Minutes", "desc": "The 15 minute load average of the machine during the interval"}, "memory.total": {"title": "Total Memory", "desc": "Total memory on the machine during the interval"}, "memory.free": {"title": "Free Memory", "desc": "Free memory on the machine during the interval"}, "bats.running": {"title": "Running BATs", "desc": "List of running BATs at the end of the interval"}, "bats.stopped": {"title": "Stopped BATs", "desc": "List of stopped BATs at the end of the interval"}, "network.bytes_in": {"title": "Network Bytes In", "desc": "Total bytes received by the machine during the interval"}, "network.bytes_out": {"title": "Network Bytes Out", "desc": "Total bytes sent by the machine during the interval"}}}, "event_opsflag": {"title": "Opsflag", "version": "1.1.10", "projection": {"args": "string_array", "auser": "string", "euser": "string", "description": "string", "id": "string", "muid": "string", "ref": "string", "schema": "string", "severity": "string", "uptime": "double", "time": "double", "false_positive": "bool", "ancestors": "string_array", "original_schema": "string", "ephemeral": "bool", "agent_type": "string", "hostname": "string", "pod_namespace": "string", "cluster_name": "string", "flag_class": "string", "short_name": "string", "custom_flag_uid": "string", "custom_flag_name": "string", "cluster_uid": "string"}, "descriptions": {"args": {"title": "Arguments", "desc": "If referencing a process, the arguments of the process that generated the ops flag"}, "pod_namespace": {"title": "Pod Namespace", "desc": "The namespace of the pod associated with the red flag"}, "auser": {"title": "Authenticated User Name", "desc": "If referencing a process, the authenticated user name of the process that generated the ops flag"}, "euser": {"title": "Effective User Name", "desc": "If referencing a process, the effective user name of the process that generated the ops flag"}, "description": {"title": "Description", "desc": "The reason the ops flag was generated"}, "id": {"title": "UID", "desc": "The unique Spyderbat ID of the ops flag"}, "muid": {"title": "Machine UID", "desc": "The Spyderbat ID of the machine associated with the ops flag"}, "ref": {"title": "Reference Object UID", "desc": "The Spyderbat ID of the object that the ops flag is associated with"}, "schema": {"title": "Schema", "desc": "The full schema string of the ops flag"}, "severity": {"title": "Severity", "desc": "The alert level of the ops flag; one of info, low, medium, high, or critical"}, "uptime": {"title": "Uptime", "desc": "The uptime of the object referenced by the ops flag"}, "time": {"title": "Time", "desc": "The time the ops flag was generated"}, "false_positive": {"title": "False positive", "desc": "Is the opsflag a false positive?"}, "ancestors": {"title": "Ancestors", "desc": "If the reference object has ancestor processes, this is a list of their names"}, "ephemeral": {"title": "Is Ephemeral", "desc": "For agent-related ops flags, is the reference object ephemeral?"}, "agent_type": {"title": "Agent Type", "desc": "For agent-related ops flags, the type of agent that generated it"}, "hostname": {"title": "Hostname", "desc": "The hostname of the machine associated with an opsflag"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the cluster associated with an opsflag"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat UID of the cluster associated with an opsflag"}, "flag_class": {"title": "Class", "desc": "The class of the red flag indicating the flag's type"}, "short_name": {"title": "Short Name", "desc": "The short name describing the red flag"}, "custom_flag_uid": {"title": "Custom Flag UID", "desc": "If the red flag is associated with a custom flag, this is the Spyderbat ID of the custom flag"}, "custom_flag_name": {"title": "Custom Flag Name", "desc": "If the red flag is associated with a custom flag, this is the name of the custom flag"}}}, "model_agent": {"title": "Agent", "version": "1.0.2", "omit_from_console": true, "projection": {"id": "string", "muid": "string", "agent_arch": "string", "agent_version": "string", "agent_type": "string", "ephemeral": "bool", "original_schema": "string", "hostname": "string", "os_pretty_name": "string", "status": "string", "time": "double", "valid_from": "double", "valid_to": "double", "schema": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID of the agent"}, "muid": {"title": "Machine UID", "desc": "The Spyderbat ID of the machine associated with this model or event"}, "agent_arch": {"title": "Agent Architecture", "desc": "The architecture of the agent's host machine"}, "agent_version": {"title": "Agent Version", "desc": "The version of the agent"}, "agent_type": {"title": "Agent Type", "desc": "The type of agent: nano_agent or clustermonitor"}, "ephemeral": {"title": "Is Ephemeral", "desc": "Is the agent ephemeral, or expected to come and go?"}, "hostname": {"title": "Hostname", "desc": "The hostname of the agent's host machine"}, "os_pretty_name": {"title": "OS Pretty Name", "desc": "The pretty name of the agent's host machine's operating system"}, "status": {"title": "Status", "desc": "The health status of the agent"}, "time": {"title": "Time", "desc": "The time at which the agent record was last updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the agent record was first seen"}, "valid_to": {"title": "Valid To", "desc": "When closed, the time at which the agent record is considered to be completed or finished"}, "schema": {"title": "Schema", "desc": "The full schema string of the agent"}}}, "model_spydertrace": {"title": "Spydertrace", "version": "1.0.8", "projection": {"id": "string", "interactive": "bool", "muid": "string", "trigger": "string", "status": "string", "root_proc_name": "string", "trigger_short_name": "string", "time": "double", "score": "long", "interactive_users": "string_array", "original_schema": "string", "non_interactive_users": "string_array", "overtaken": "bool", "schema": "string", "suppressed": "bool", "suppressed_by": "string", "valid_from": "double", "valid_to": "double", "container_uid": "string", "cluster_name": "string", "cluster_uid": "string", "image": "string", "namespace": "string", "hostname": "string", "policy_name": "string", "policy_uid": "string", "flag_count": "integer", "trigger_cgroup": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID of the spydertrace"}, "interactive": {"title": "Is Interactive", "desc": "Is the spydertrace interactive, or associated with interactive user processes?"}, "muid": {"title": "Machine UID", "desc": "The Spyderbat ID of the machine associated with the spydertrace"}, "trigger": {"title": "Trigger UID", "desc": "The unique ID for the object that triggered the spydertrace's creation"}, "status": {"title": "Status", "desc": "The status of this spydertrace: closed or active"}, "root_proc_name": {"title": "Root Process Name", "desc": "The name of the root process of the spydertrace"}, "trigger_short_name": {"title": "Trigger Short Name", "desc": "The short name for the object that triggered the spydertrace"}, "time": {"title": "Time", "desc": "The time at which the spydertrace was last updated"}, "score": {"title": "Score", "desc": "A score ranking the severity of the spydertrace"}, "interactive_users": {"title": "Interactive Users", "desc": "A list of interactive users associated with the spydertrace"}, "non_interactive_users": {"title": "Non-Interactive Users", "desc": "A list of non-interactive users associated with the spydertrace"}, "overtaken": {"title": "Is Overtaken", "desc": "Has the spydertrace been overtaken by another spydertrace? The other trace would contain all of the overtaken trace"}, "schema": {"title": "Schema", "desc": "The full schema string of the spydertrace"}, "suppressed": {"title": "Is Suppressed", "desc": "Is the spydertrace suppressed, or associated with expected activity?"}, "suppressed_by": {"title": "Suppressed By", "desc": "If the spydertrace is suppressed, this is the Spyderbat UID of the trace suppression policy."}, "valid_from": {"title": "Valid From", "desc": "The time at which the spydertrace was created"}, "valid_to": {"title": "Valid To", "desc": "The time at which the spydertrace is considered to be completed or finished"}, "container_uid": {"title": "Container UID", "desc": "The Spyderbat UID of the container associated with the spydertrace"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the cluster associated with the spydertrace"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat UID of the cluster associated with the spydertrace"}, "image": {"title": "Image", "desc": "The container image associated with the spydertrace trigger"}, "namespace": {"title": "Namespace", "desc": "The namespace associated with the spydertrace trigger"}, "hostname": {"title": "Hostname", "desc": "The hostname of the machine associated with the spydertrace"}, "policy_name": {"title": "Policy Name", "desc": "The name of the policy that generated the spydertrace"}, "policy_uid": {"title": "Policy UID", "desc": "The Spyderbat UID of the policy that generated the spydertrace"}, "flag_count": {"title": "Flag Count", "desc": "The number of flags associated with the spydertrace"}, "trigger_cgroup": {"title": "Trigger Cgroup", "desc": "The cgroup associated with the spydertrace triggering process"}}}, "model_summary": {"title": "Summary", "version": "1.0.0", "projection": {"id": "string", "schema": "string", "time": "double", "valid_from": "double", "original_schema": "string", "ref": "string", "is_ai_generated": "bool"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the summary object"}, "schema": {"title": "Schema", "desc": "The full schema string of the summary object"}, "time": {"title": "Time", "desc": "The time at which the summary object was last updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the summary object was first seen"}, "original_schema": {"title": "Original Schema", "desc": "An alias for the schema field"}, "ref": {"title": "Reference", "desc": "The reference object associated with the summary object"}, "is_ai_generated": {"title": "Is AI Generated", "desc": "Is the summary object generated by an AI model?"}}}, "model_container": {"title": "Container", "version": "1.0.6", "projection": {"id": "string", "container_id": "string", "container_name": "string", "image_id": "string", "image": "string", "muid": "string", "root_puid": "string", "schema": "string", "time": "double", "original_schema": "string", "valid_from": "double", "valid_to": "double", "cluster_uid": "string", "clustername": "string", "node_uid": "string", "pod_uid": "string", "pod_name": "string", "pod_namespace": "string", "pod_namespace_labels": "map_str_str", "pod_labels": "map_str_str", "red_flag_count": "integer", "ops_flag_count": "integer"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the container"}, "container_id": {"title": "Container ID", "desc": "The long identifier of the container as reported by the container runtime"}, "container_name": {"title": "Container Name", "desc": "The name of the container as reported by the container runtime"}, "image_id": {"title": "Image ID", "desc": "The identifier of the image used to create the container"}, "image": {"title": "Image", "desc": "The fully qualified name of the image used to create the container"}, "muid": {"title": "Machine UID", "desc": "The unique spyderbat machine ID the container is running on"}, "root_puid": {"title": "Root process UID", "desc": "The spyderbat ID of the root process running in the container"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the container model"}, "time": {"title": "Time", "desc": "The time of update to the container model"}, "valid_from": {"title": "Valid From", "desc": "The time at which the container was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the container was last seen, or considered to be completed or finished"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the container is a part of"}, "clustername": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the container is a part of"}, "node_uid": {"title": "Node UID", "desc": "The Spyderbat ID for the kubernetes node the container is running on"}, "pod_uid": {"title": "Pod UID", "desc": "The Spyderbat ID for the kubernetes pod the container is a part of"}, "pod_name": {"title": "Pod Name", "desc": "The name of the kubernetes pod the container is a part of"}, "pod_namespace": {"title": "Pod Namespace", "desc": "The namespace of the kubernetes pod the container is a part of"}, "pod_namespace_labels": {"title": "Pod Namespace Labels", "desc": "The labels for the namespace of the kubernetes pod the container is a part of"}, "pod_labels": {"title": "Pod Labels", "desc": "The kubernetes labels for the pod the container is a part of"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}}, "joins": {"cluster": {"real_name": "cluster", "new_schema": "model_k8s_cluster", "one_to_many": false}, "node": {"real_name": "node", "new_schema": "model_k8s_node", "one_to_many": false}, "pod": {"real_name": "pod", "new_schema": "model_k8s_pod", "one_to_many": false}, "machine": {"real_name": "machine", "new_schema": "model_machine", "one_to_many": false}, "processes": {"real_name": "processes[*]", "new_schema": "model_process", "one_to_many": true}, "root_process": {"real_name": "root_process", "new_schema": "model_process", "one_to_many": false}, "connections": {"real_name": "connections[*]", "new_schema": "model_connection", "one_to_many": true}}}, "model_k8s_cluster": {"title": "Cluster", "version": "1.0.5", "projection": {"id": "string", "name": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "original_schema": "string", "eks_uid": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the cluster"}, "name": {"title": "Name", "desc": "The name assigned to the cluster at spyderbat provisioning time"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the cluster model"}, "time": {"title": "Time", "desc": "The time of update to the cluster model"}, "valid_from": {"title": "Valid From", "desc": "The time at which the cluster was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the cluster was last seen, or considered to be completed or finished"}, "eks_uid": {"title": "EKS UID", "desc": "The spyderbat UID for the EKS Cluster model associated with this cluster (if any)"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}, "joins": {"pods": {"real_name": "pods[*]", "new_schema": "model_k8s_pod", "one_to_many": true}, "services": {"real_name": "services[*]", "new_schema": "model_k8s_service", "one_to_many": true}, "deployments": {"real_name": "deployments[*]", "new_schema": "model_k8s_deployment", "one_to_many": true}, "replicasets": {"real_name": "replicasets[*]", "new_schema": "model_k8s_replicaset", "one_to_many": true}, "daemonsets": {"real_name": "daemonsets[*]", "new_schema": "model_k8s_daemonset", "one_to_many": true}, "statefulsets": {"real_name": "statefulsets[*]", "new_schema": "model_k8s_statefulset", "one_to_many": true}, "jobs": {"real_name": "jobs[*]", "new_schema": "model_k8s_job", "one_to_many": true}, "cronjobs": {"real_name": "cronjobs[*]", "new_schema": "model_k8s_cronjob", "one_to_many": true}, "nodes": {"real_name": "nodes[*]", "new_schema": "model_k8s_node", "one_to_many": true}, "containers": {"real_name": "containers[*]", "new_schema": "model_container", "one_to_many": true}}}, "model_k8s_node": {"title": "Node", "version": "1.0.4", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "muid": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "original_schema": "string", "metadata.name": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "kind": "string", "status": "string", "k8s_status.allocatable.cpu": "string", "k8s_status.allocatable.memory": "string", "k8s_status.allocatable.pods": "string", "k8s_status.nodeInfo.architecture": "string", "k8s_status.nodeInfo.osImage": "string", "k8s_status.nodeInfo.containerRuntimeVersion": "string", "k8s_status.capacity.cpu": "string", "spec.taints": "string_array"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this model"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the node belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the node belongs to"}, "muid": {"title": "Machine UID", "desc": "The unique Spyderbat machine ID for the node"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the node model"}, "time": {"title": "Time", "desc": "The time at which the node was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the node was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the node was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the node as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the node as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the node as reported in the metadata"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}, "k8s_status.allocatable.cpu": {"title": "Allocatable CPU", "desc": "The amount of CPU allocatable to the node"}, "k8s_status.allocatable.memory": {"title": "Allocatable Memory", "desc": "The amount of memory allocatable to the node"}, "k8s_status.allocatable.pods": {"title": "Allocatable Pods", "desc": "The number of pods allocatable to the node"}, "k8s_status.nodeInfo.architecture": {"title": "Architecture", "desc": "The architecture of the node"}, "k8s_status.nodeInfo.osImage": {"title": "OS Image", "desc": "The operating system image of the node"}, "k8s_status.nodeInfo.containerRuntimeVersion": {"title": "Container Runtime Version", "desc": "The container runtime version of the node"}, "k8s_status.capacity.cpu": {"title": "Capacity CPU", "desc": "The amount of CPU capacity of the node"}, "spec.taints": {"title": "Taints", "desc": "The taints applied to the node"}}, "joins": {"cluster": {"real_name": "cluster", "new_schema": "model_k8s_cluster", "one_to_many": false}, "pods": {"real_name": "pods[*]", "new_schema": "model_k8s_pod", "one_to_many": true}}}, "model_k8s_deployment": {"title": "Deployment", "version": "1.0.5", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "metadata.name": "string", "original_schema": "string", "metadata.namespace": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "spec.replicas": "integer", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the deployment"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the deployment belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the deployment belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the deployment model"}, "time": {"title": "Time", "desc": "The time at which the deployment was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the deployment was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the deployment was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the deployment as reported in the metadata"}, "metadata.namespace": {"title": "Namespace", "desc": "The kubernetes namespace for the deployment as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the deployment as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the deployment as reported in the metadata"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "spec.replicas": {"title": "Replicas", "desc": "Defines the desired number of pod replicas for a deployment."}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}, "joins": {"cluster": {"real_name": "cluster", "new_schema": "model_k8s_cluster", "one_to_many": false}, "replicasets": {"real_name": "replicasets[*]", "new_schema": "model_k8s_replicaset", "one_to_many": true}, "pods": {"real_name": "pods[*]", "new_schema": "model_k8s_pod", "one_to_many": true}}}, "model_k8s_replicaset": {"title": "Replicaset", "version": "1.0.6", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "schema": "string", "time": "double", "original_schema": "string", "valid_from": "double", "valid_to": "double", "metadata.name": "string", "metadata.namespace": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "owner_uid": "string", "owner_name": "string", "spec.replicas": "double", "red_flag_count": "integer", "ops_flag_count": "integer", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the replicaset"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the replicaset belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the replicaset belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the replicaset model"}, "time": {"title": "Time", "desc": "The time at which the replicaset was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the replicaset was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the replicaset was last seen, or considered to be completed or finished"}, "spec.replicas": {"title": "Replicas", "desc": "The number of replicas for the replicaset"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the replicaset as reported in the metadata"}, "metadata.namespace": {"title": "Namespace", "desc": "The kubernetes namespace for the replicaset as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the replicaset as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the replicaset as reported in the metadata"}, "owner_uid": {"title": "Owner UID", "desc": "The Spyderbat ID of the resource that owns the replicaset"}, "owner_name": {"title": "Owner name", "desc": "The name of the resource that owns the replicaset"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}, "joins": {"cluster": {"real_name": "cluster", "new_schema": "model_k8s_cluster", "one_to_many": false}, "deployment": {"real_name": "deployment", "new_schema": "model_k8s_deployment", "one_to_many": false}, "pods": {"real_name": "pods[*]", "new_schema": "model_k8s_pod", "one_to_many": true}}}, "model_k8s_daemonset": {"title": "Daemonset", "version": "1.0.5", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "metadata.name": "string", "metadata.namespace": "string", "original_schema": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the daemonset"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the daemonset belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the daemonset belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the daemonset model"}, "time": {"title": "Time", "desc": "The time at which the daemonset was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the daemonset was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the daemonset was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the daemonset as reported in the metadata"}, "metadata.namespace": {"title": "Namespace", "desc": "The kubernetes namespace for the daemonset as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the daemonset as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the daemonset as reported in the metadata"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}, "joins": {"cluster": {"real_name": "cluster", "new_schema": "model_k8s_cluster", "one_to_many": false}, "pods": {"real_name": "pods[*]", "new_schema": "model_k8s_pod", "one_to_many": true}}}, "model_k8s_job": {"title": "Job", "version": "1.0.5", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "original_schema": "string", "metadata.name": "string", "metadata.namespace": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the job"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the job belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the job belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the job model"}, "time": {"title": "Time", "desc": "The time at which the job was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the job was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the job was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the job as reported in the metadata"}, "metadata.namespace": {"title": "Namespace", "desc": "The kubernetes namespace for the job as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the job as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the job as reported in the metadata"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}, "joins": {"cluster": {"real_name": "cluster", "new_schema": "model_k8s_cluster", "one_to_many": false}, "pods": {"real_name": "pods[*]", "new_schema": "model_k8s_pod", "one_to_many": true}}}, "model_k8s_cronjob": {"title": "Cronjob", "version": "1.0.6", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "metadata.name": "string", "metadata.namespace": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "original_schema": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "spec.schedule": "string", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the cronjob"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the cronjob belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the cronjob belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the cronjob model"}, "time": {"title": "Time", "desc": "The time at which the cronjob was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the cronjob was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the cronjob was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the cronjob as reported in the metadata"}, "metadata.namespace": {"title": "Namespace", "desc": "The kubernetes namespace for the cronjob as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the cronjob as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the cronjob as reported in the metadata"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "spec.schedule": {"title": "Schedule", "desc": "Defines the frequency of job execution using a cron expression"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}, "joins": {"cluster": {"real_name": "cluster", "new_schema": "model_k8s_cluster", "one_to_many": false}}}, "model_k8s_statefulset": {"title": "Statefulset", "version": "1.0.7", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "metadata.name": "string", "original_schema": "string", "metadata.namespace": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "spec.replicas": "double", "red_flag_count": "integer", "ops_flag_count": "integer", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the statefulset"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the statefulset belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the statefulset belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the statefulset model"}, "time": {"title": "Time", "desc": "The time at which the statefulset was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the statefulset was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the statefulset was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the statefulset as reported in the metadata"}, "metadata.namespace": {"title": "Namespace", "desc": "The kubernetes namespace for the statefulset as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the statefulset as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the statefulset as reported in the metadata"}, "spec.replicas": {"title": "Replicas", "desc": "The number of replicas for the statefulset"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}, "joins": {"cluster": {"real_name": "cluster", "new_schema": "model_k8s_cluster", "one_to_many": false}, "pods": {"real_name": "pods[*]", "new_schema": "model_k8s_pod", "one_to_many": true}}}, "model_k8s_service": {"title": "Service", "version": "1.0.4", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "original_schema": "string", "metadata.name": "string", "metadata.namespace": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the service"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the service belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the service belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the service model"}, "time": {"title": "Time", "desc": "The time at which the service was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the service was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the service was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the service as reported in the metadata"}, "metadata.namespace": {"title": "Namespace", "desc": "The kubernetes namespace for the service as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the service as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the service as reported in the metadata"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}, "joins": {"cluster": {"real_name": "cluster", "new_schema": "model_k8s_cluster", "one_to_many": false}}}, "model_k8s_pod": {"title": "Pod", "version": "1.0.4", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "node_uid": "string", "schema": "string", "time": "double", "valid_from": "double", "original_schema": "string", "valid_to": "double", "metadata.name": "string", "metadata.namespace": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "deployment_uid": "string", "deployment_name": "string", "owner_kind": "string", "owner_name": "string", "owner_uid": "string", "muid": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "kind": "string", "spec.nodeName": "string", "k8s_status.phase": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the pod"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the pod belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the pod belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the pod model"}, "time": {"title": "Time", "desc": "The time at which the pod was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the pod was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the pod was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the pod as reported in the metadata"}, "metadata.namespace": {"title": "Namespace", "desc": "The kubernetes namespace for the pod as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the pod as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the pod as reported in the metadata"}, "node_uid": {"title": "Node UID", "desc": "The Spyderbat ID for the node the pod is running on"}, "deployment_uid": {"title": "Deployment UID", "desc": "The Spyderbat ID for the deployment the pod is associated with"}, "deployment_name": {"title": "Deployment name", "desc": "The name of the deployment the pod is associated with"}, "owner_kind": {"title": "Owner Kind", "desc": "The kind of the resource that owns the pod"}, "owner_name": {"title": "Owner Name", "desc": "The name of the resource that owns the pod"}, "owner_uid": {"title": "Owner UID", "desc": "The Spyderbat ID of the resource that owns the pod"}, "muid": {"title": "Machine UID", "desc": "The unique machine ID associated with this pod"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "spec.nodeName": {"title": "Node Name", "desc": "The name of the node the pod is running on"}, "k8s_status.phase": {"title": "Phase", "desc": "The current running phase of the pod"}, "status": {"title": "Status", "desc": "The status of this model: closed or active", "indexed": true}}, "joins": {"cluster": {"real_name": "cluster", "new_schema": "model_k8s_cluster", "one_to_many": false}, "node": {"real_name": "node", "new_schema": "model_k8s_node", "one_to_many": false}, "deployment": {"real_name": "deployment", "new_schema": "model_k8s_deployment", "one_to_many": false}, "replicaset": {"real_name": "replicaset", "new_schema": "model_k8s_replicaset", "one_to_many": false}, "daemonset": {"real_name": "daemonset", "new_schema": "model_k8s_daemonset", "one_to_many": false}, "statefulset": {"real_name": "statefulset", "new_schema": "model_k8s_statefulset", "one_to_many": false}, "job": {"real_name": "job", "new_schema": "model_k8s_job", "one_to_many": false}, "machine": {"real_name": "machine", "new_schema": "model_machine", "one_to_many": false}, "containers": {"real_name": "containers[*]", "new_schema": "model_container", "one_to_many": true}}}, "model_k8s_role": {"title": "Role", "version": "1.0.4", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "metadata.name": "string", "metadata.namespace": "string", "original_schema": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the role"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the role belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the role belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the role model"}, "time": {"title": "Time", "desc": "The time at which the role was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the role was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the role was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the role as reported in the metadata"}, "metadata.namespace": {"title": "Namespace", "desc": "The kubernetes namespace for the role as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the role as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the role as reported in the metadata"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}}, "model_k8s_clusterrole": {"title": "Cluster Role", "version": "1.0.4", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "schema": "string", "time": "double", "valid_from": "double", "original_schema": "string", "valid_to": "double", "metadata.name": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the role"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the role belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the role belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the role model"}, "time": {"title": "Time", "desc": "The time at which the role was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the role was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the role was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the role as reported in the metadata"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the clusterrole, including any subschemas"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the role as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the role as reported in the metadata"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}}, "model_k8s_serviceaccount": {"title": "Service Account", "version": "1.0.5", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "schema": "string", "original_schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "metadata.name": "string", "metadata.namespace": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "aws_account_id": "string", "aws_account_uid": "string", "aws_role_arn": "string", "aws_role_uid": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the service account"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the service account belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the service account belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the service account model"}, "time": {"title": "Time", "desc": "The time at which the service account was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the service account was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the service account was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the service account as reported in the metadata"}, "metadata.namespace": {"title": "Namespace", "desc": "The kubernetes namespace for the service account as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the service account as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the service account as reported in the metadata"}, "aws_account_id": {"title": "AWS Account ID", "desc": "The AWS account ID associated with the service account"}, "aws_account_uid": {"title": "AWS Account UID", "desc": "The spyderbat UID for the AWS account associated with the service account"}, "aws_role_arn": {"title": "AWS Role ARN", "desc": "The ARN of the AWS role associated with the service account (if any)"}, "aws_role_uid": {"title": "AWS Role UID", "desc": "The spyderbat UID for the AWS role associated with the service account (if any)"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the service account, including any subschemas"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}}, "model_k8s_rolebinding": {"title": "Role Binding", "version": "1.0.4", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "metadata.name": "string", "original_schema": "string", "metadata.namespace": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "roleRef.role_uid": "string", "subject_uids": "string_array", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the rolebinding"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the rolebinding belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the rolebinding belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the rolebinding model"}, "time": {"title": "Time", "desc": "The time at which the rolebinding was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the rolebinding was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the rolebinding was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the rolebinding as reported in the metadata"}, "metadata.namespace": {"title": "Namespace", "desc": "The kubernetes namespace for the rolebinding as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the rolebinding as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the rolebinding as reported in the metadata"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the rolebinding, including any subschemas"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "roleRef.role_uid": {"title": "Role UID", "desc": "The Spyderbat UID of the role associated with the rolebinding"}, "subject_uids": {"title": "Subjects", "desc": "Spyderbat UIDs of the subjects associated with the rolebinding"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}}, "model_k8s_clusterrolebinding": {"title": "Cluster Role Binding", "version": "1.0.4", "projection": {"id": "string", "cluster_uid": "string", "cluster_name": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "metadata.name": "string", "metadata.labels": "map_str_str", "metadata.uid": "string", "original_schema": "string", "red_flag_count": "integer", "ops_flag_count": "integer", "roleRef.role_uid": "string", "subject_uids": "string_array", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the clusterrolebinding"}, "cluster_uid": {"title": "Cluster UID", "desc": "The Spyderbat ID for the kubernetes cluster the clusterrolebinding belongs to"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the kubernetes cluster the clusterrolebinding belongs to"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the clusterrolebinding model"}, "time": {"title": "Time", "desc": "The time at which the clusterrolebinding was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the clusterrolebinding was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the clusterrolebinding was last seen, or considered to be completed or finished"}, "metadata.name": {"title": "Name", "desc": "The kubernetes name for the clusterrolebinding as reported in the metadata"}, "metadata.labels": {"title": "Labels", "desc": "The kubernetes labels for the clusterrolebinding as reported in the metadata"}, "metadata.uid": {"title": "Kubernetes UID", "desc": "The kubernetes unique id for the clusterrolebinding as reported in the metadata"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the clusterrolebinding, including any subschemas"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "roleRef.role_uid": {"title": "Cluster Role UID", "desc": "The Spyderbat UID of the cluster role associated with the clusterrolebinding"}, "subject_uids": {"title": "Subjects", "desc": "Spyderbat UIDs of the subjects associated with the rolebinding"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}}, "model_listening_socket": {"title": "Listening Socket", "version": "1.0.3", "projection": {"id": "string", "duration": "double", "local_ip": "ip", "local_port": "integer", "muid": "string", "puids": "string_array", "schema": "string", "original_schema": "string", "status": "string", "time": "double", "valid_from": "double", "valid_to": "double", "proc_name": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the listening socket"}, "duration": {"title": "Duration", "desc": "The duration of the model in seconds"}, "local_ip": {"title": "Local IP", "desc": "The local IP address, or originating address of the connection"}, "local_port": {"title": "Local port", "desc": "The local port of the connection"}, "muid": {"title": "Machine UID", "desc": "The Spyderbat ID of the machine associated with this model or event"}, "puids": {"title": "Process UIDs", "desc": "The Spyderbat IDs for the associated processes to this socket"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the listening socket model"}, "status": {"title": "Status", "desc": "The status of this listening socket: closed or active"}, "time": {"title": "Time", "desc": "The time at which this record was updated"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the listening socket, including any subschemas"}, "valid_from": {"title": "Valid From", "desc": "The time at which this model was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which this model was last seen, or considered to be completed or finished"}, "proc_name": {"title": "Process Name", "desc": "The name of the process associated with the listening socket"}}, "joins": {"machine": {"real_name": "machine", "new_schema": "model_machine", "one_to_many": false}, "processes": {"real_name": "processes[*]", "new_schema": "model_process", "one_to_many": false}}}, "model_connection": {"title": "Connection", "version": "1.1.8", "projection": {"bytes_rx": "long", "bytes_tx": "long", "direction": "string", "dsts": "string_array", "duration": "double", "family": "string", "id": "string", "local_ip": "ip", "local_port": "integer", "muid": "string", "container_uid": "string", "cgroup": "string", "payload": "string", "peer_cuid": "string", "original_schema": "string", "peer_muid": "string", "peer_puid": "string", "proc_name": "string", "puid": "string", "puids": "string_array", "remote_ip": "ip", "remote_port": "integer", "remote_hostname": "string", "schema": "string", "srcs": "string_array", "traces": "string_array", "status": "string", "time": "double", "valid_from": "double", "valid_to": "double", "red_flag_count": "integer", "ops_flag_count": "integer", "protocol": "string"}, "descriptions": {"bytes_rx": {"title": "Bytes Received", "desc": "The number of bytes received on the local side of the connection"}, "bytes_tx": {"title": "Bytes Sent", "desc": "The number of bytes sent on to the remote side of the connection"}, "direction": {"title": "Direction", "desc": "The direction of the connection: inbound, outbound, or unknown"}, "dsts": {"title": "Destination", "desc": "The destinations of the connection (max 100 array), in either ipv4 or ipv6 with remote IP and port"}, "duration": {"title": "Duration", "desc": "The duration of the connection model in seconds at time of last update"}, "family": {"title": "Family", "desc": "Family: IPV4 or IPV6"}, "id": {"title": "UID", "desc": "The unique Spyderbat ID for this connection"}, "local_ip": {"title": "Local IP", "desc": "The local IP address, or originating address of the connection"}, "local_port": {"title": "Local port", "desc": "The local port of the connection"}, "muid": {"title": "Machine UID", "desc": "The Spyderbat ID of the machine associated with the connection"}, "container_uid": {"title": "Container UID", "desc": "The Spyderbat ID of the container associated with the connection"}, "cgroup": {"title": "CGroup", "desc": "The latest cgroup associated with the connection"}, "payload": {"title": "Payload", "desc": "A string representation of the payload of the connection; for example, the domain name of a DNS request response"}, "peer_cuid": {"title": "Peer Connection UID", "desc": "The Spyderbat ID of the peer remote connection if seen by Spyderbat"}, "peer_muid": {"title": "Peer Machine UID", "desc": "The Spyderbat ID of the peer connection's machine if seen by Spyderbat"}, "peer_puid": {"title": "Peer Process UID", "desc": "The Spyderbat ID of the peer connection's process if seen by Spyderbat"}, "proc_name": {"title": "Process Name", "desc": "The name of the process associated with the connection"}, "puid": {"title": "Process UID", "desc": "The Spyderbat ID of the latest process associated with the connection"}, "puids": {"title": "Process UIDs", "desc": "The Spyderbat IDs of the process(es) associated with the connection"}, "remote_ip": {"title": "Remote IP", "desc": "The IP address on the remote side of the connection"}, "remote_port": {"title": "Remote Port", "desc": "The port number on the remote side of the connection"}, "remote_hostname": {"title": "Remote Hostname", "desc": "The hostname on the remote side of the connection"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the connection model"}, "srcs": {"title": "Sources", "desc": "The objects that are the source of the connection (max 100 array)"}, "traces": {"title": "Spydertraces", "desc": "The Spyderbat IDs of the spydertraces this connection is a part of"}, "status": {"title": "Status", "desc": "The status of this connection: closed or active"}, "time": {"title": "Time", "desc": "The time at which the connection was last updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the connection was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the connection was last seen, or considered to be completed or finished"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the connection, including any subschemas"}, "protocol": {"title": "Protocol", "desc": "The protocol of the connection: usually tcp or udp"}}, "joins": {"machine": {"real_name": "machine", "new_schema": "model_machine", "one_to_many": false}, "peer_machine": {"real_name": "peer_machine", "new_schema": "model_machine", "one_to_many": false}, "processes": {"real_name": "processes[*]", "new_schema": "model_process", "one_to_many": false}, "peer_process": {"real_name": "peer_process", "new_schema": "model_process", "one_to_many": false}, "peer_connection": {"real_name": "peer_connection", "new_schema": "model_connection", "one_to_many": false}, "container": {"real_name": "container", "new_schema": "model_container", "one_to_many": false}}}, "model_machine": {"title": "Machine", "version": "1.1.6", "projection": {"cloud_image_id": "string", "cloud_instance_id": "string", "cloud_region": "string", "cloud_type": "string", "cloud_tags": "map_str_str", "cluster_name": "string", "original_schema": "string", "cpu_model": "string", "boot_time": "double", "duration": "double", "hostname": "string", "public_ip": "string_array", "id": "string", "machine_processor": "string", "kernel_mods": "string_array", "private_ip": "string_array", "os_name": "string", "os_release": "string", "os_version": "string", "os_system": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "ec2_uid": "string"}, "descriptions": {"cloud_image_id": {"title": "Cloud Image ID", "desc": "If from a cloud provider, the image ID"}, "cloud_instance_id": {"title": "Cloud Instance ID", "desc": "If from a cloud provider, the instance ID of the virtual machine"}, "cloud_region": {"title": "Cloud Region ID", "desc": "If from a cloud provider, the region ID"}, "cloud_type": {"title": "Cloud Type", "desc": "If from a cloud provider, the type of cloud provider"}, "cloud_tags": {"title": "Cloud Tags", "desc": "If from a cloud provider, the tags associated with the machine"}, "cluster_name": {"title": "Cluster Name", "desc": "The name of the cluster the machine is associated with"}, "cpu_model": {"title": "CPU Model", "desc": "The model of the CPU that is installed in the machine"}, "boot_time": {"title": "Boot Time", "desc": "The time at which the machine was booted"}, "duration": {"title": "Duration", "desc": "The amount of time the machine has been running in seconds"}, "hostname": {"title": "Hostname", "desc": "The hostname of the machine"}, "public_ip": {"title": "Public IP Address", "desc": "The public IP addresses associated with the machine"}, "id": {"title": "UID", "desc": "The unique Spyderbat ID for this machine"}, "machine_processor": {"title": "CPU Architecture", "desc": "The architecture of the CPU that is installed in the machine"}, "kernel_mods": {"title": "Kernel Modules", "desc": "The list of kernel modules that are installed on the machine"}, "private_ip": {"title": "Private IP Address", "desc": "The private IP addresses associated with the machine"}, "os_name": {"title": "OS Name", "desc": "The name of the operating system installed on the machine"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the machine, including any subschemas"}, "os_release": {"title": "OS Release", "desc": "The release of the operating system installed on the machine"}, "os_version": {"title": "OS Version", "desc": "The version of the operating system installed on the machine"}, "os_system": {"title": "OS System", "desc": "The system of the operating system installed on the machine, generally linux"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the machine model"}, "time": {"title": "Time", "desc": "The time at which the machine record was last updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the machine was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which this model was last seen, or considered to be completed or finished"}, "ec2_uid": {"title": "EC2 UID", "desc": "The unique ID for the AWS EC2 instance model associated with this machine (if any)"}}, "joins": {"processes": {"real_name": "processes[*]", "new_schema": "model_process", "one_to_many": true}, "connections": {"real_name": "connections[*]", "new_schema": "model_connection", "one_to_many": true}, "connections_as_peer": {"real_name": "connections_as_peer[*]", "new_schema": "model_connection", "one_to_many": true}, "commands": {"real_name": "commands[*]", "new_schema": "event_bash_cmd", "one_to_many": true}, "listening_sockets": {"real_name": "listening_sockets[*]", "new_schema": "model_listening_socket", "one_to_many": true}}}, "model_fingerprint": {"title": "Fingerprint", "version": "1.0.3", "omit_from_console": true, "projection": {"id": "string", "root_puid": "string", "muid": "string", "schema": "string", "time": "double", "valid_from": "double", "status": "string", "cgroup": "string", "service_name": "string", "original_schema": "string", "image": "string", "image_id": "string", "container_name": "string", "container_id": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this model"}, "root_puid": {"title": "Root Process UID", "desc": ""}, "muid": {"title": "Machine UID", "desc": "The Spyderbat ID of the machine associated with the fingerprint"}, "schema": {"title": "Schema", "desc": "The full schema string of the fingerprint"}, "time": {"title": "Time", "desc": "The time at which this record was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which this model was first seen"}, "status": {"title": "Status", "desc": "The status of this fingerprint: closed or active"}, "cgroup": {"title": "Cgroup", "desc": ""}, "service_name": {"title": "Service Name", "desc": ""}, "image": {"title": "Image", "desc": ""}, "image_id": {"title": "Image ID", "desc": ""}, "container_name": {"title": "Container Name", "desc": ""}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the fingerprint, including any subschemas"}, "container_id": {"title": "Container ID", "desc": ""}}}, "model_process": {"title": "Process", "version": "1.2.7", "projection": {"args": "string_array", "auser": "string", "duration": "double", "ancestors": "string_array", "ancestor_uids": "string_array", "environ": "map_str_str", "euser": "string", "exe": "string", "container_id": "string", "container_uid": "string", "cgroup": "string", "id": "string", "original_schema": "string", "thread": "bool", "interactive": "bool", "muid": "string", "name": "string", "pid": "integer", "ppid": "integer", "ppuid": "string", "schema": "string", "status": "string", "time": "double", "traces": "string_array", "valid_from": "double", "valid_to": "double", "red_flag_count": "integer", "ops_flag_count": "integer"}, "descriptions": {"args": {"title": "Arguments", "desc": "The arguments specified when the process is started"}, "auser": {"title": "Authenticated user", "desc": "The authenticated user name"}, "duration": {"title": "Duration", "desc": "The duration of the model in seconds"}, "ancestors": {"title": "Ancestors", "desc": "A list of the names of the ancestor processes"}, "ancestor_uids": {"title": "Ancestor UIDs", "desc": "A list of the UIDs of the ancestor processes"}, "environ": {"title": "Environment Variables", "desc": "A map with the name and value of all environment variables set at the time of process creation"}, "euser": {"title": "Effective user", "desc": "The effective user who created the process"}, "exe": {"title": "Executable", "desc": "The pathname of the executable associated with the process"}, "container_id": {"title": "Container ID", "desc": "The container ID"}, "container_uid": {"title": "Container UID", "desc": "The spyderbat ID for the container model, if any"}, "cgroup": {"title": "CGroup", "desc": "The Cgroup, if any, associated with the process"}, "id": {"title": "UID", "desc": "The unique Spyderbat ID for this model"}, "thread": {"title": "Thread", "desc": "Indicates that this process is a thread"}, "interactive": {"title": "Interactive", "desc": "Specifies if the process is associated with a terminal, and indicates if there is a human user who likely created the process"}, "muid": {"title": "Machine UID", "desc": "The Spyderbat ID of the associated machine"}, "name": {"title": "Name", "desc": "The name of the process"}, "pid": {"title": "PID", "desc": "The Unix process ID for this process"}, "ppid": {"title": "Parent PID", "desc": "The Unix process ID for the parent of this process"}, "ppuid": {"title": "Parent Process UID", "desc": "The Spyderbat ID of the parent process object"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the process model"}, "status": {"title": "Status", "desc": "The status of this process: closed or active"}, "time": {"title": "Time", "desc": "The time at which this record was updated"}, "traces": {"title": "Traces", "desc": "A list of Spyderbat IDs for traces associated with this process"}, "valid_from": {"title": "Valid From", "desc": "The time at which this model was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which this model was last seen, or considered to be completed or finished"}, "red_flag_count": {"title": "Red Flag Count", "desc": "The total number of red flags associated with a resource ID"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the process, including any subschemas"}, "ops_flag_count": {"title": "Ops Flag Count", "desc": "The total number of ops flags associated with a resource ID"}}, "joins": {"machine": {"real_name": "machine", "new_schema": "model_machine", "one_to_many": false}, "parent": {"real_name": "parent", "new_schema": "model_process", "one_to_many": false}, "children": {"real_name": "children[*]", "new_schema": "model_process", "one_to_many": true}, "connections": {"real_name": "connections[*]", "new_schema": "model_connection", "one_to_many": true}, "connections_as_peer": {"real_name": "connections_as_peer[*]", "new_schema": "model_connection", "one_to_many": true}, "container": {"real_name": "container", "new_schema": "model_container", "one_to_many": false}, "container_as_root": {"real_name": "container_as_root", "new_schema": "model_container", "one_to_many": false}, "listening_sockets": {"real_name": "listening_sockets[*]", "new_schema": "model_listening_socket", "one_to_many": true}, "ancestor_processes": {"real_name": "ancestor_processes[*]", "new_schema": "model_process", "one_to_many": false}, "descendant_processes": {"real_name": "descendant_processes[*]", "new_schema": "model_process", "one_to_many": true}, "commands": {"real_name": "commands[*]", "new_schema": "event_bash_cmd", "one_to_many": true}}}, "model_bundled_connection": {"title": "Connection Bundle", "version": "1.0.3", "omit_from_console": true, "projection": {"id": "string", "time": "double", "valid_from": "double", "valid_to": "double", "num_connections": "integer", "proto": "string", "original_schema": "string", "client_asn": "integer", "client_asn_country": "string", "client_asn_name": "string", "client_cloud_name": "string", "client_cluster_uid": "string", "client_container_uid": "string", "client_dns_name": "string", "client_ip": "ip", "client_muid": "string", "client_pod_uid": "string", "client_proc_name": "string", "client_puid": "string", "client_type": "string", "schema": "string", "server_asn": "integer", "server_asn_country": "string", "server_asn_name": "string", "server_cloud_name": "string", "server_cluster_uid": "string", "server_container_uid": "string", "server_dns_name": "string", "server_endpoint_uid": "string", "server_ip": "ip", "server_muid": "string", "server_pod_uid": "string", "server_port": "integer", "server_proc_name": "string", "server_puid": "string", "server_type": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this model"}, "time": {"title": "Time", "desc": "The time at which this record was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which this model was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which this model was last seen, or considered to be completed or finished"}, "num_connections": {"title": "Number of Connections", "desc": ""}, "proto": {"title": "", "desc": ""}, "client_asn": {"title": "Client ASN", "desc": ""}, "client_asn_country": {"title": "Client ASN Country", "desc": ""}, "client_asn_name": {"title": "Client ASN Name", "desc": ""}, "client_cloud_name": {"title": "Client Cloud Name", "desc": ""}, "client_cluster_uid": {"title": "Client Cluster UID", "desc": ""}, "client_container_uid": {"title": "Client Container UID", "desc": ""}, "client_dns_name": {"title": "Client DNS Name", "desc": ""}, "client_ip": {"title": "Client IP", "desc": ""}, "client_muid": {"title": "Client Machine UID", "desc": ""}, "client_pod_uid": {"title": "Client Pod UID", "desc": ""}, "client_proc_name": {"title": "Client Process Name", "desc": ""}, "client_puid": {"title": "Client Process UID", "desc": ""}, "client_type": {"title": "", "desc": ""}, "server_asn": {"title": "Server ASN", "desc": ""}, "schema": {"title": "Schema", "desc": ""}, "server_asn_country": {"title": "Server ASN Country", "desc": ""}, "server_asn_name": {"title": "Server ASN Name", "desc": ""}, "server_cloud_name": {"title": "Server Cloud Name", "desc": ""}, "server_cluster_uid": {"title": "Server Cluster UID", "desc": ""}, "server_container_uid": {"title": "Server Container UID", "desc": ""}, "server_dns_name": {"title": "Server DNS Name", "desc": ""}, "server_endpoint_uid": {"title": "Server Endpoint UID", "desc": ""}, "server_ip": {"title": "Server IP", "desc": ""}, "server_muid": {"title": "Server Machine UID", "desc": ""}, "server_pod_uid": {"title": "Server Pod UID", "desc": ""}, "server_port": {"title": "Server Port", "desc": ""}, "server_proc_name": {"title": "Server Process Name", "desc": ""}, "server_puid": {"title": "Server Process UID", "desc": ""}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the bundled connection, including any subschemas"}, "server_type": {"title": "", "desc": ""}}}, "model_k8s_namespace": {"title": "Kubernetes Namespace", "version": "1.0.3", "omit_from_console": false, "projection": {"id": "string", "cluster_uid": "string", "time": "double", "original_schema": "string", "valid_from": "double", "valid_to": "double", "kind": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this model"}, "cluster_uid": {"title": "Cluster UID", "desc": "The unique Spyderbat ID for the cluster"}, "time": {"title": "Time", "desc": "The time at which this namespace was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which this namespace was first seen"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the namespace, including any subschemas"}, "valid_to": {"title": "Valid To", "desc": "The time at which this namespace was last seen, or considered to be completed or finished"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}}, "model_k8s_api_call": {"title": "Kubernetes API Call", "version": "1.0.2", "omit_from_console": false, "projection": {"id": "string", "cluster_uid": "string", "time": "double", "valid_from": "double", "valid_to": "double", "status": "string", "verb": "string", "request_uri": "string", "original_schema": "string", "api_group_version": "string", "resource_type": "string", "resource_name": "string", "resource_namespace": "string", "resource_uid": "string", "user": "string", "user_agent": "string", "source_ips": "string_array"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this model"}, "cluster_uid": {"title": "Cluster UID", "desc": "The unique Spyderbat ID for the cluster"}, "time": {"title": "Time", "desc": "The time at which this API call was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which this API call was first seen"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the API call, including any subschemas"}, "valid_to": {"title": "Valid To", "desc": "The time at which this API call was last seen, or considered to be completed or finished"}, "status": {"title": "Status", "desc": "The status of this API call model (active or closed)"}, "verb": {"title": "Verb", "desc": "The Kubernetes verb of the API call"}, "request_uri": {"title": "Request URI", "desc": "The URI of the API call"}, "api_group_version": {"title": "API Group Version", "desc": "The API group version of the API call"}, "resource_type": {"title": "Resource Type", "desc": "The type of resource the API call is for"}, "resource_name": {"title": "Resource Name", "desc": "The name of the resource the API call is for"}, "resource_namespace": {"title": "Resource Namespace", "desc": "The namespace of the resource the API call is for"}, "resource_uid": {"title": "Resource UID", "desc": "The UID of the resource the API call is for"}, "user": {"title": "User", "desc": "The user of the API call"}, "user_agent": {"title": "User Agent", "desc": "The user agent of the API call"}, "source_ips": {"title": "Source IPs", "desc": "The source IPs of the API call"}}}, "model_k8s_api_session": {"title": "Kubernetes API Session", "version": "1.0.1", "omit_from_console": false, "projection": {"id": "string", "cluster_uid": "string", "time": "double", "valid_from": "double", "valid_to": "double", "status": "string", "user_agent": "string", "api_uid": "string", "original_schema": "string", "user": "string", "source_ips": "string_array"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this model"}, "cluster_uid": {"title": "Cluster UID", "desc": "The unique Spyderbat ID for the cluster"}, "time": {"title": "Time", "desc": "The time at which this API session was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which this API session was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which this API session was last seen, or considered to be completed or finished"}, "status": {"title": "Status", "desc": "The status of this API session"}, "user_agent": {"title": "User Agent", "desc": "The user agent of the API session"}, "api_uid": {"title": "API UID", "desc": "The unique Spyderbat ID for the API"}, "user": {"title": "User", "desc": "The user of the API session"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the API session, including any subschemas"}, "source_ips": {"title": "Source IPs", "desc": "The source IPs of the API session"}}}, "model_k8s_user": {"title": "Kubernetes User", "version": "1.0.2", "omit_from_console": false, "projection": {"id": "string", "cluster_uid": "string", "time": "double", "valid_from": "double", "original_schema": "string", "valid_to": "double", "status": "string", "kind": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this model"}, "cluster_uid": {"title": "Cluster UID", "desc": "The unique Spyderbat ID for the cluster"}, "time": {"title": "Time", "desc": "The time at which this user was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which this user was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which this user was last seen, or considered to be completed or finished"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the user, including any subschemas"}, "status": {"title": "Status", "desc": "The status of this user"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}}}, "model_k8s_group": {"title": "Kubernetes Group", "version": "1.0.2", "omit_from_console": false, "projection": {"id": "string", "cluster_uid": "string", "time": "double", "valid_from": "double", "original_schema": "string", "valid_to": "double", "status": "string", "kind": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this model"}, "cluster_uid": {"title": "Cluster UID", "desc": "The unique Spyderbat ID for the cluster"}, "time": {"title": "Time", "desc": "The time at which this group was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which this group was first seen"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the group, including any subschemas"}, "valid_to": {"title": "Valid To", "desc": "The time at which this group was last seen, or considered to be completed or finished"}, "status": {"title": "Status", "desc": "The status of this group"}, "kind": {"title": "Kind", "desc": "The kubernetes kind string for the resource"}}}, "model_k8s_endpoint": {"title": "Kubernetes Endpoint", "version": "1.0.2", "omit_from_console": false, "projection": {"id": "string", "cluster_uid": "string", "time": "double", "valid_from": "double", "valid_to": "double", "ip": "string", "original_schema": "string", "port": "integer", "protocol": "string", "service_name": "string", "service_namespace": "string", "pod_uid": "string", "service_uid": "string", "port_name": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this model"}, "cluster_uid": {"title": "Cluster UID", "desc": "The unique Spyderbat ID for the cluster"}, "time": {"title": "Time", "desc": "The time at which this endpoint was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which this endpoint was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which this endpoint was last seen, or considered to be completed or finished"}, "ip": {"title": "IP", "desc": "The IP address of the endpoint"}, "port": {"title": "Port", "desc": "The port of the endpoint"}, "protocol": {"title": "Protocol", "desc": "The protocol of the endpoint"}, "service_name": {"title": "Service Name", "desc": "The name of the service"}, "service_namespace": {"title": "Service Namespace", "desc": "The namespace that this service belongs to"}, "pod_uid": {"title": "Pod UID", "desc": "The unique Spyderbat ID for the pod"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the pod, including any subschemas"}, "service_uid": {"title": "Service UID", "desc": "The unique Spyderbat ID for the service"}, "port_name": {"title": "Port Name", "desc": "The name of the port"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}}, "model_k8s_api": {"title": "Kubernetes API", "version": "1.0.1", "omit_from_console": false, "projection": {"id": "string", "cluster_uid": "string", "time": "double", "valid_from": "double", "original_schema": "string", "valid_to": "double", "endpoint_uid": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this model"}, "cluster_uid": {"title": "Cluster UID", "desc": "The unique Spyderbat ID for the cluster"}, "time": {"title": "Time", "desc": "The time at which this API was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which this API was first seen"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the api, including any subschemas"}, "valid_to": {"title": "Valid To", "desc": "The time at which this API was last seen, or considered to be completed or finished"}, "endpoint_uid": {"title": "Endpoint", "desc": "The Endpoint that this API belongs to"}, "status": {"title": "Status", "desc": "The status of this API"}}}, "event_causal": {"title": "Causal Event", "version": "1.0.1", "omit_from_console": false, "projection": {"id": "string", "cluster_uid": "string", "time": "double", "original_schema": "string", "ref_causer": "string", "ref_causee": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this event"}, "cluster_uid": {"title": "Cluster UID", "desc": "The unique Spyderbat ID for the cluster"}, "time": {"title": "Time", "desc": "The time at which this causal event occurred"}, "ref_causer": {"title": "Causer", "desc": "The unique Spyderbat ID for the causer"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the casual event, including any subschemas"}, "ref_causee": {"title": "Causee", "desc": "The unique Spyderbat ID for the causee"}}}, "event_agent_health": {"title": "Event Agent Health", "version": "1.0.0", "omit_from_console": true, "projection": {"id": "string", "time": "double", "original_schema": "string", "ref": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this event"}, "time": {"title": "Time", "desc": "The time at which this causal event occurred"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for the casual event, including any subschemas"}, "ref": {"title": "Ref", "desc": "The unique Spyderbat ID for the agent"}}}, "event_top_data": {"title": "SpyderTop Data", "version": "1.0.1", "omit_from_console": true, "projection": {"id": "string", "time": "double", "muid": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this event"}, "muid": {"title": "Machine UID", "desc": "The unique Spyderbat machine ID for the machine"}, "time": {"title": "Time", "desc": "The time at which the SpyderTop data was collected"}}}, "event_bash_cmd": {"title": "BashCommand", "version": "1.0.3", "projection": {"id": "string", "puid": "string", "original_schema": "string", "muid": "string", "euser": "string", "cwd": "string", "schema": "string", "time": "double", "cmd": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for this event"}, "puid": {"title": "Bash process UID", "desc": "The unique Spyderbat ID for the bash process"}, "muid": {"title": "Machine UID", "desc": "The unique Spyderbat machine ID for the machine"}, "cwd": {"title": "Directory", "desc": "The current directory of the bash process when the command was run"}, "euser": {"title": "Effective User Name", "desc": "The effective user name of the bash process"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for bash command events"}, "time": {"title": "Time", "desc": "The time at which the bash command was run"}, "original_schema": {"title": "Original schema", "desc": "The unmodified Spyderbat schema for bash commands, including any subschemas"}, "cmd": {"title": "Command", "desc": "The command(s) typed into the bash shell"}}, "joins": {"process": {"real_name": "process", "new_schema": "model_process", "one_to_many": false}, "machine": {"real_name": "machine", "new_schema": "model_machine", "one_to_many": false}}}, "model_organization": {"title": "Organization", "version": "1.0.2", "omit_from_console": true, "projection": {"id": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "org_uid": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the organization"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the service account model"}, "time": {"title": "Time", "desc": "The time at which the service account was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the service account was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the service account was last seen, or considered to be completed or finished"}, "org_uid": {"title": "Organization UID", "desc": "The unique Spyderbat ID for the organization"}}}, "model_aws_account": {"title": "AWS Account", "version": "1.0.2", "projection": {"id": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "account_id": "string", "status": "string"}, "descriptions": {"id": {"title": "UID", "desc": "The unique Spyderbat ID for the AWS Account"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the AWS Account model"}, "time": {"title": "Time", "desc": "The time at which the AWS Account was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the AWS Account was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the AWS Account was last seen, or considered to be completed or finished"}, "account_id": {"title": "AWS Account ID", "desc": "The Account ID for the AWS Account"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}}, "model_aws_iam_role": {"title": "AWS IAM Role", "version": "1.0.2", "projection": {"name": "string", "arn": "string", "aws_account_id": "string", "svc_accounts": "string_array", "id": "string", "aws_account_uid": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "status": "string"}, "descriptions": {"name": {"title": "Role Name", "desc": "The name of the AWS IAM Role"}, "arn": {"title": "ARN", "desc": "The Amazon Resource Name for the AWS IAM Role"}, "aws_account_id": {"title": "AWS Account ID", "desc": "The AWS Account ID the AWS IAM Role belongs to"}, "svc_accounts": {"title": "Service Accounts", "desc": "A list of Kubernetes service accounts associated with this role (if any)"}, "id": {"title": "UID", "desc": "The unique Spyderbat ID for the AWS IAM Role"}, "aws_account_uid": {"title": "AWS Account UID", "desc": "The Spyderbat AWS Account UID the AWS IAM Role is associated with"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the AWS IAM Role model"}, "time": {"title": "Time", "desc": "The time at which the AWS IAM Role was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the AWS IAM Role was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the AWS IAM Role was last seen, or considered to be completed or finished"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}}, "model_aws_ec2_instance": {"title": "AWS EC2 Instance", "version": "1.0.2", "projection": {"name": "string", "instance_id": "string", "aws_account_id": "string", "tags": "map_str_str", "PublicDnsName": "string", "PublicIpAddress": "ip", "PrivateDnsName": "string", "PrivateIpAddress": "ip", "State.Name": "string", "region": "string", "InstanceType": "string", "VpcId": "string", "id": "string", "aws_account_uid": "string", "muid": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "status": "string"}, "descriptions": {"name": {"title": "Instance Name", "desc": "The name of the instance as configured in the Name Key Tag"}, "instance_id": {"title": "EC2 Instance ID", "desc": "The AWS ID of the AWS EC2 Instance"}, "aws_account_id": {"title": "AWS Account ID", "desc": "The AWS Account ID the EC2 Instance belongs to"}, "tags": {"title": "Tags", "desc": "The tags associated with the instance"}, "PublicDnsName": {"title": "Public DNS Name", "desc": "The public DNS name of the instance"}, "PublicIpAddress": {"title": "Public IP Address", "desc": "The public IP address of the instance"}, "PrivateDnsName": {"title": "Private DNS Name", "desc": "The private DNS name of the instance"}, "PrivateIpAddress": {"title": "Private IP Address", "desc": "The private IP address of the instance"}, "State.Name": {"title": "State Name", "desc": "The state of the instance"}, "region": {"title": "Region", "desc": "The region the instance is in"}, "InstanceType": {"title": "Instance Type", "desc": "The type of the AWS EC2 Instance"}, "VpcId": {"title": "VPC ID", "desc": "The ID of the VPC the instance is in"}, "id": {"title": "UID", "desc": "The unique Spyderbat ID for the EC2 Instance"}, "aws_account_uid": {"title": "AWS Account UID", "desc": "The Spyderbat AWS Account UID the EC2 Instance is associated with"}, "muid": {"title": "Machine UID", "desc": "The spyderbat machine uid associated with this instance, if the instance is monitored by Spyderbat"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the EC2 Instance model"}, "time": {"title": "Time", "desc": "The time at which the EC2 Instance was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the EC2 Instance was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the EC2 Instance was last seen, or considered to be completed or finished"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}}, "model_aws_eks_cluster": {"title": "AWS EKS Cluster", "version": "1.0.2", "projection": {"name": "string", "arn": "string", "aws_account_id": "string", "region": "string", "tags": "map_str_str", "cluster_meta.status": "string", "id": "string", "aws_account_uid": "string", "cluster_uid": "string", "schema": "string", "time": "double", "valid_from": "double", "valid_to": "double", "status": "string"}, "descriptions": {"name": {"title": "Cluster Name", "desc": "The name of the EKS Cluster"}, "arn": {"title": "ARN", "desc": "The Amazon Resource Name for the EKS Cluster"}, "aws_account_id": {"title": "AWS Account ID", "desc": "The AWS Account ID the EKS Cluster belongs to"}, "region": {"title": "Region", "desc": "The region the EKS Cluster is in"}, "tags": {"title": "Cluster Tags", "desc": "The tags associated with the EKS Cluster"}, "cluster_meta.status": {"title": "Cluster Status", "desc": "The status of the EKS Cluster"}, "id": {"title": "UID", "desc": "The unique Spyderbat ID for the EKS Cluster"}, "aws_account_uid": {"title": "AWS Account UID", "desc": "The Spyderbat AWS Account UID the EKS Cluster is associated with"}, "cluster_uid": {"title": "Cluster UID", "desc": "The unique Spyderbat ID for the EKS Cluster, if the cluster is monitored by Spyderbat"}, "schema": {"title": "Schema", "desc": "The Spyderbat schema for the EKS Cluster model"}, "time": {"title": "Time", "desc": "The time at which the EKS Cluster was updated"}, "valid_from": {"title": "Valid From", "desc": "The time at which the EKS Cluster was first seen"}, "valid_to": {"title": "Valid To", "desc": "The time at which the EKS Cluster was last seen, or considered to be completed or finished"}, "status": {"title": "Status", "desc": "The status of this model: closed or active"}}}}